﻿@using CustomIdentity.ViewModels;
@model Login

@{
    ViewData["Title"] = "Login";
}

<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-3 card p-3">
        <h1 class="text-center text-success">TestApp</h1>
        <form asp-action="Login" method="post" asp-route-returnurl="@ViewData["ReturnUrl"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-1">
                <label asp-for="Correo" class="control-label"></label>
                <input asp-for="Correo" class="form-control" />
                <span asp-validation-for="Correo" class="text-danger"></span>
            </div>
            <div class="mb-1">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="row">
                <div class="col-12 text-center py-2">
                    <input type="submit" value="Iniciar Sesión" class="btn btn-dark" />
                </div>
            </div>
            <div class="row">
                <div class="col-12 text-center">
                    <a asp-action="Register" class="text-decoration-none  mt-2 text-secondary" asp-route-returnurl="@ViewData["ReturnUrl"]">Registrarme</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}